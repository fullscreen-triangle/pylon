[workspace]
resolver = "2"
members = [
    "crates/pylon-core",
    "crates/pylon-coordinator",
    "crates/cable-network",
    "crates/cable-spatial", 
    "crates/cable-individual",
    "crates/temporal-economic",
    "crates/precision-by-difference",
    "crates/pylon-sdk",
    "crates/pylon-cli",
    "crates/pylon-web",
    "crates/pylon-metrics",
    "crates/pylon-config",
    "crates/pylon-test-utils",
]

[workspace.package]
version = "0.1.0"
edition = "2021"
rust-version = "1.75"
authors = ["Kundai Farai Sachikonye <kundai.sachikonye@wzw.tum.de>"]
license = "MIT"
repository = "https://github.com/organization/pylon"
homepage = "https://pylon-coordination.org"
documentation = "https://docs.rs/pylon"
keywords = ["coordination", "temporal", "spatial", "precision", "distributed"]
categories = ["network-programming", "algorithms", "simulation", "science"]
description = "Unified spatio-temporal coordination infrastructure through precision-by-difference calculations"

[workspace.dependencies]
# Async runtime and utilities
tokio = { version = "1.35", features = ["full"] }
tokio-util = { version = "0.7", features = ["full"] }
futures = "0.3"
async-trait = "0.1"

# Serialization and data formats
serde = { version = "1.0", features = ["derive", "rc"] }
serde_json = "1.0"
serde_yaml = "0.9"
toml = "0.8"
bincode = "1.3"

# Mathematical computation
nalgebra = { version = "0.32", features = ["serde-serialize", "rand"] }
num-complex = "0.4"
num-traits = "0.2"
approx = "0.5"
rand = { version = "0.8", features = ["std_rng"] }

# Time and temporal operations
chrono = { version = "0.4", features = ["serde", "clock"] }
time = { version = "0.3", features = ["serde", "parsing", "formatting"] }

# Networking and communication
tonic = { version = "0.10", features = ["transport", "codegen", "prost"] }
prost = "0.12"
prost-types = "0.12"
tower = { version = "0.4", features = ["full"] }
hyper = { version = "1.0", features = ["full"] }
axum = { version = "0.7", features = ["ws", "headers", "multipart"] }
reqwest = { version = "0.11", features = ["json", "stream"] }

# WebSocket support
tokio-tungstenite = { version = "0.21", features = ["native-tls"] }
tungstenite = "0.21"

# Database and storage
sqlx = { version = "0.7", features = ["runtime-tokio-rustls", "sqlite", "postgres", "chrono", "uuid"] }
redis = { version = "0.24", features = ["tokio-comp", "connection-manager"] }

# Observability and logging
tracing = { version = "0.1", features = ["attributes"] }
tracing-subscriber = { version = "0.3", features = ["env-filter", "json"] }
tracing-appender = "0.2"
metrics = "0.22"
metrics-exporter-prometheus = "0.13"

# Error handling and utilities
anyhow = "1.0"
thiserror = "1.0"
color-eyre = "0.6"
eyre = "0.6"

# Cryptography and security
ring = "0.17"
aes-gcm = "0.10"
chacha20poly1305 = "0.10"
argon2 = "0.5"
rand_core = { version = "0.6", features = ["std"] }

# Configuration and environment
config = "0.14"
dotenvy = "0.15"
clap = { version = "4.4", features = ["derive", "env", "string"] }

# Concurrency and synchronization
parking_lot = "0.12"
dashmap = "5.5"
crossbeam = "0.8"
rayon = "1.8"

# Validation and testing
validator = { version = "0.17", features = ["derive"] }
proptest = "1.4"
criterion = { version = "0.5", features = ["html_reports"] }
mockall = "0.12"

# UUID and identifiers
uuid = { version = "1.6", features = ["v4", "v7", "serde"] }

# Memory and performance
bytes = "1.5"
smallvec = { version = "1.11", features = ["serde"] }
ahash = "0.8"

# Workspace utilities
once_cell = "1.19"
lazy_static = "1.4"
pin-project = "1.1"

[profile.dev]
opt-level = 0
debug = true
split-debuginfo = "unpacked"
debug-assertions = true
overflow-checks = true
lto = false
panic = "unwind"
incremental = true
codegen-units = 256

[profile.dev.package."*"]
opt-level = 3

[profile.release]
opt-level = 3
debug = false
split-debuginfo = "packed"
debug-assertions = false
overflow-checks = false
lto = "thin"
panic = "abort"
incremental = false
codegen-units = 1
strip = "symbols"

[profile.test]
opt-level = 1
debug = true
debug-assertions = true
overflow-checks = true
incremental = true

[profile.bench]
opt-level = 3
debug = false
debug-assertions = false
overflow-checks = false
lto = "thin"
codegen-units = 1
incremental = false

# Custom profile for maximum performance testing
[profile.maxperf]
inherits = "release"
opt-level = 3
lto = "fat"
codegen-units = 1
panic = "abort"

[workspace.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]

[workspace.metadata.cargo-machete]
ignored = ["prost-build", "tonic-build"]
